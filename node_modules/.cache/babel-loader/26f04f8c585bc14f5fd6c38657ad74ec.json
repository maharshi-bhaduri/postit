{"ast":null,"code":"import _slicedToArray from \"C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mkbha\\\\OneDrive\\\\Documents\\\\Maharshi\\\\Projects\\\\React\\\\postit\\\\src\\\\components\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\n\nfunction List() {\n  _s();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var posts = function posts() {\n    // let posts = \n    fetch('https://listnotes.forgiveandforget.workers.dev/').then(function (result) {\n      result.json();\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.log(\"An error occured. Error: \", err);\n    }); // return posts\n  };\n\n  var content = isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 55\n    }\n  }, \"GOT DATAA!!\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, content);\n}\n\n_s(List, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/src/components/List.jsx"],"names":["React","useEffect","useState","Post","List","isLoading","setIsLoading","posts","fetch","then","result","json","catch","err","console","log","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAEd,kBAAkCF,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB;AACAC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CAAyDC,IAAzD,CACE,UAAAC,MAAM,EAAI;AACRA,MAAAA,MAAM,CAACC,IAAP;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKEM,KALF,CAKQ,UAAAC,GAAG,EAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,GAAzC;AACD,KAPD,EAFkB,CAWlB;AACD,GAZD;;AAcA,MAAMG,OAAO,GAAGX,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAApD;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,OADH,CADF;AAKD;;GAxBQZ,I;;KAAAA,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nfunction List() {\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  const posts = () => {\r\n    // let posts = \r\n    fetch('https://listnotes.forgiveandforget.workers.dev/').then(\r\n      result => {\r\n        result.json()\r\n        setIsLoading(false)\r\n      }\r\n    ).catch(err => {\r\n      console.log(\"An error occured. Error: \", err)\r\n    }\r\n    )\r\n    // return posts\r\n  }\r\n\r\n  const content = isLoading ? <div>Loading...</div> : <div>GOT DATAA!!</div>\r\n  return (\r\n    <ul>\r\n      {content}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}