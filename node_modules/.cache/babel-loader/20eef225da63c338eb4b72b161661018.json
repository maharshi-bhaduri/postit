{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mkbha\\\\OneDrive\\\\Documents\\\\Maharshi\\\\Projects\\\\React\\\\postit\\\\src\\\\components\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\mkbha\\\\OneDrive\\\\Documents\\\\Maharshi\\\\Projects\\\\React\\\\postit\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\n\nfunction List() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  function fetchPosts() {\n    return _fetchPosts.apply(this, arguments);\n  }\n\n  function _fetchPosts() {\n    _fetchPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var posts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://listnotes.forgiveandforget.workers.dev/').then(function (result) {\n                return result.json();\n              });\n\n            case 2:\n              posts = _context.sent;\n              return _context.abrupt(\"return\", posts);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchPosts.apply(this, arguments);\n  }\n\n  posts = fetchPosts();\n  var posts = [];\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, posts.forEach(function (post) {\n    return /*#__PURE__*/React.createElement(Post, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }\n    });\n  }));\n}\n\n_s(List, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/src/components/List.jsx"],"names":["React","useEffect","useState","Post","List","isLoading","setIsLoading","fetchPosts","fetch","then","result","json","posts","forEach","post"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAEd,kBAAkCF,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAFc,WAICC,UAJD;AAAA;AAAA;;AAAA;AAAA,2EAId;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBC,KAAK,CAAC,iDAAD,CAAL,CAAyDC,IAAzD,CAChB,UAAAC,MAAM;AAAA,uBAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,eADU,CADpB;;AAAA;AACMC,cAAAA,KADN;AAAA,+CAKSA,KALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJc;AAAA;AAAA;;AAYdA,EAAAA,KAAK,GAAGL,UAAU,EAAlB;AACA,MAAIK,KAAK,GAAG,EAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,CAACC,OAAN,CAAc,UAAAC,IAAI;AAAA,wBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAlB,CAFJ,CADF;AAOD;;GArBQV,I;;KAAAA,I;AAuBT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nfunction List() {\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  \r\n  async function fetchPosts() {\r\n    let posts = await fetch('https://listnotes.forgiveandforget.workers.dev/').then(\r\n      result => result.json()\r\n    )\r\n\r\n    return posts\r\n  }\r\n\r\n  posts = fetchPosts();\r\n  var posts = []\r\n  return (\r\n    <ul>\r\n      {\r\n        posts.forEach(post => <Post />)\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}