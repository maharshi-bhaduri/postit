{"ast":null,"code":"import _slicedToArray from \"C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mkbha\\\\OneDrive\\\\Documents\\\\Maharshi\\\\Projects\\\\React\\\\postit\\\\src\\\\components\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\n\nfunction List() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  useEffect(function () {\n    getPosts();\n  }, []);\n\n  var getPosts = function getPosts() {\n    fetch('https://listnotes.forgiveandforget.workers.dev/').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setPosts(data);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      console.log(\"An error occured. Error: \", err);\n    });\n  };\n\n  var postsRenderer = posts.map(function (post) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, post);\n  });\n  var content = isLoading ? [] : posts;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, JSON.stringify(content));\n}\n\n_s(List, \"LIlXfl1D8KngBl3V9zWlyT30NoU=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/src/components/List.jsx"],"names":["React","useEffect","useState","Post","List","isLoading","setIsLoading","posts","setPosts","getPosts","fetch","then","response","json","data","catch","err","console","log","postsRenderer","map","post","content","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAEd,kBAAkCF,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CAAyDC,IAAzD,CACE,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADV,EAEEF,IAFF,CAGE,UAAAG,IAAI,EAAI;AACNN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KANH,EAOES,KAPF,CAOQ,UAAAC,GAAG,EAAI;AACbV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,GAAzC;AACD,KAVD;AAYD,GAbD;;AAeA,MAAMG,aAAa,GAAGZ,KAAK,CAACa,GAAN,CAAU,UAAAC,IAAI,EAAI;AACtC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAN,CAAP;AACD,GAFqB,CAAtB;AAIA,MAAMC,OAAO,GAAGjB,SAAS,GAAG,EAAH,GAAQE,KAAjC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,IAAI,CAACC,SAAL,CAAeF,OAAf,CADH,CADF;AAKD;;GAlCQlB,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nfunction List() {\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [])\r\n\r\n  const getPosts = () => {\r\n    fetch('https://listnotes.forgiveandforget.workers.dev/').then(\r\n      response => response.json()\r\n    ).then(\r\n      data => {\r\n        setPosts(data)\r\n        setIsLoading(false)\r\n      }\r\n    ).catch(err => {\r\n      setIsLoading(false)\r\n      console.log(\"An error occured. Error: \", err)\r\n    }\r\n    )\r\n  }\r\n\r\n  const postsRenderer = posts.map(post => {\r\n    return <div>{post}</div>;\r\n  })\r\n  \r\n  const content = isLoading ? [] : posts\r\n  return (\r\n    <ul>\r\n      {JSON.stringify(content)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}