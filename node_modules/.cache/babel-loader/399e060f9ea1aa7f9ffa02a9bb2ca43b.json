{"ast":null,"code":"import _slicedToArray from\"C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import Post from\"./Post\";function List(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];useEffect(function(){getPosts();},[]);var getPosts=function getPosts(){fetch('https://listnotes.forgiveandforget.workers.dev/').then(function(response){return response.json();}).then(function(data){setPosts(data);setIsLoading(false);console.log(\"post \",posts);}).catch(function(err){setIsLoading(false);console.log(\"An error occured. Error: \",err);});};var postsRenderer=posts.map(function(post){return/*#__PURE__*/React.createElement(\"li\",{key:post.name},post.content);});var content=isLoading?/*#__PURE__*/React.createElement(\"div\",null,\"Loading\"):/*#__PURE__*/React.createElement(\"div\",null,postsRenderer);return/*#__PURE__*/React.createElement(\"div\",null,content);}export default List;","map":{"version":3,"sources":["C:/Users/mkbha/OneDrive/Documents/Maharshi/Projects/React/postit/src/components/List.jsx"],"names":["React","useEffect","useState","Post","List","isLoading","setIsLoading","posts","setPosts","getPosts","fetch","then","response","json","data","console","log","catch","err","postsRenderer","map","post","name","content"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAGA,QAASC,CAAAA,IAAT,EAAgB,CAEd,cAAkCF,QAAQ,CAAC,IAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACA,eAA0BJ,QAAQ,CAAC,EAAD,CAAlC,yCAAOK,KAAP,eAAcC,QAAd,eAEAP,SAAS,CAAC,UAAM,CACdQ,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBC,KAAK,CAAC,iDAAD,CAAL,CAAyDC,IAAzD,CACE,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADV,EAEEF,IAFF,CAGE,SAAAG,IAAI,CAAI,CACNN,QAAQ,CAACM,IAAD,CAAR,CACAR,YAAY,CAAC,KAAD,CAAZ,CACAS,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBT,KAApB,EACD,CAPH,EAQEU,KARF,CAQQ,SAAAC,GAAG,CAAI,CACbZ,YAAY,CAAC,KAAD,CAAZ,CACAS,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCE,GAAzC,EACD,CAXD,EAaD,CAdD,CAgBA,GAAMC,CAAAA,aAAa,CAAGZ,KAAK,CAACa,GAAN,CAAU,SAACC,IAAD,qBAAW,0BAAI,GAAG,CAAEA,IAAI,CAACC,IAAd,EAAqBD,IAAI,CAACE,OAA1B,CAAX,EAAV,CAAtB,CAEA,GAAMA,CAAAA,OAAO,CAAGlB,SAAS,cAAG,yCAAH,cAAwB,+BAAMc,aAAN,CAAjD,CAEA,mBACE,+BACGI,OADH,CADF,CAKD,CAED,cAAenB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\n\r\nfunction List() {\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [])\r\n\r\n  const getPosts = () => {\r\n    fetch('https://listnotes.forgiveandforget.workers.dev/').then(\r\n      response => response.json()\r\n    ).then(\r\n      data => {\r\n        setPosts(data)\r\n        setIsLoading(false)\r\n        console.log(\"post \",posts)\r\n      }\r\n    ).catch(err => {\r\n      setIsLoading(false)\r\n      console.log(\"An error occured. Error: \", err)\r\n    }\r\n    )\r\n  }\r\n\r\n  const postsRenderer = posts.map((post) => (<li key={post.name}>{post.content}</li>))\r\n\r\n  const content = isLoading ? <div>Loading</div> : <div>{postsRenderer}</div>\r\n\r\n  return (\r\n    <div>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}